<?xml version="1.0"?>
<testsuite name="Chrome Headless 89.0.4389.128 (Mac OS 10.15.3)" package="" timestamp="2021-04-19T15:53:00" id="0" hostname="MacBook-Pro-2.local" tests="60" errors="0" failures="0" time="0.212">
  <properties>
    <property name="browser.fullName" value="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/89.0.4389.128 Safari/537.36"/>
  </properties>
  <testcase name="tucows-donejs-carousel viewModel properties activeSlideIndex should be set to 0 initially" time="0" classname="tucows-donejs-carousel viewModel properties activeSlideIndex"/>
  <testcase name="tucows-donejs-carousel viewModel properties lastSlideIndex should return the last slides index number" time="0" classname="tucows-donejs-carousel viewModel properties lastSlideIndex"/>
  <testcase name="tucows-donejs-carousel viewModel properties swipeObject should be set to the default initially" time="0.003" classname="tucows-donejs-carousel viewModel properties swipeObject"/>
  <testcase name="tucows-donejs-carousel viewModel properties dragging should be set to false initially" time="0" classname="tucows-donejs-carousel viewModel properties dragging"/>
  <testcase name="tucows-donejs-carousel viewModel properties carouselOptions when autoPlay is defined in carousel options when breakOnDesktop is true and it is desktop view should not set autoPlay in the view model" time="0" classname="tucows-donejs-carousel viewModel properties carouselOptions when autoPlay is defined in carousel options when breakOnDesktop is true and it is desktop view"/>
  <testcase name="tucows-donejs-carousel viewModel properties carouselOptions when autoPlay is defined in carousel options when slides length is 1 should not set autoPlay in the view model" time="0" classname="tucows-donejs-carousel viewModel properties carouselOptions when autoPlay is defined in carousel options when slides length is 1"/>
  <testcase name="tucows-donejs-carousel viewModel properties carouselOptions when autoPlay is defined in carousel options when breakOnDesktop is true, it is not desktop view (-) and slide length is > 1 should set autoPlay in the view model" time="0" classname="tucows-donejs-carousel viewModel properties carouselOptions when autoPlay is defined in carousel options when breakOnDesktop is true, it is not desktop view (-) and slide length is > 1"/>
  <testcase name="tucows-donejs-carousel viewModel properties carouselOptions when autoPlay is defined in carousel options when breakOnDesktop is not defined (-) and slide length is > 1 should set autoPlay in the view model" time="0" classname="tucows-donejs-carousel viewModel properties carouselOptions when autoPlay is defined in carousel options when breakOnDesktop is not defined (-) and slide length is > 1"/>
  <testcase name="tucows-donejs-carousel viewModel properties carouselOptions when autoPlay is not defined in carousel options (-) and slide length is > 1 should not set autoPlay in the view model" time="0" classname="tucows-donejs-carousel viewModel properties carouselOptions when autoPlay is not defined in carousel options (-) and slide length is > 1"/>
  <testcase name="tucows-donejs-carousel viewModel properties autoPlay should call window.setInterval once when duration is a number" time="0.001" classname="tucows-donejs-carousel viewModel properties autoPlay"/>
  <testcase name="tucows-donejs-carousel viewModel properties autoPlay should not call window.setInterval if not a number" time="0" classname="tucows-donejs-carousel viewModel properties autoPlay"/>
  <testcase name="tucows-donejs-carousel viewModel properties autoPlayDirection should be equal to right on default" time="0" classname="tucows-donejs-carousel viewModel properties autoPlayDirection"/>
  <testcase name="tucows-donejs-carousel viewModel properties classSelector should be &quot;.slideTrack&quot; if no extra class defined" time="0" classname="tucows-donejs-carousel viewModel properties classSelector"/>
  <testcase name="tucows-donejs-carousel viewModel properties classSelector should be &quot;.x-carousel .slideTrack&quot; if &quot;x-carousel&quot; defined as extra class" time="0" classname="tucows-donejs-carousel viewModel properties classSelector"/>
  <testcase name="tucows-donejs-carousel oneSlideOver() when direction is right should increment the active slide flag" time="0" classname="tucows-donejs-carousel oneSlideOver() when direction is right"/>
  <testcase name="tucows-donejs-carousel oneSlideOver() when direction is left should increment the active slide flag" time="0" classname="tucows-donejs-carousel oneSlideOver() when direction is left"/>
  <testcase name="tucows-donejs-carousel directionHandler() when active slide does not equal the max slide should call the oneSlideOver function once" time="0" classname="tucows-donejs-carousel directionHandler() when active slide does not equal the max slide"/>
  <testcase name="tucows-donejs-carousel directionHandler() when active slide equals the max slide when autoplay is defined should call the oneSlideOver function once with the opposite direction" time="0" classname="tucows-donejs-carousel directionHandler() when active slide equals the max slide when autoplay is defined"/>
  <testcase name="tucows-donejs-carousel arrowClickHandler() should call determine key direction function if direction is keyboard" time="0" classname="tucows-donejs-carousel arrowClickHandler()"/>
  <testcase name="tucows-donejs-carousel arrowClickHandler() when the direction is right should call the direction handler function" time="0" classname="tucows-donejs-carousel arrowClickHandler() when the direction is right"/>
  <testcase name="tucows-donejs-carousel arrowClickHandler() when the direction is left should call the direction handler function" time="0" classname="tucows-donejs-carousel arrowClickHandler() when the direction is left"/>
  <testcase name="tucows-donejs-carousel determineKeyDirection() when the target is a textarea, input or select element should return nothing" time="0" classname="tucows-donejs-carousel determineKeyDirection() when the target is a textarea, input or select element"/>
  <testcase name="tucows-donejs-carousel determineKeyDirection() when target is none of those above mentioned elements should return left if keycode is 37" time="0" classname="tucows-donejs-carousel determineKeyDirection() when target is none of those above mentioned elements"/>
  <testcase name="tucows-donejs-carousel determineKeyDirection() when target is none of those above mentioned elements should return right if keycode is 39" time="0" classname="tucows-donejs-carousel determineKeyDirection() when target is none of those above mentioned elements"/>
  <testcase name="tucows-donejs-carousel dotClickHandler() should set active slide index" time="0" classname="tucows-donejs-carousel dotClickHandler()"/>
  <testcase name="tucows-donejs-carousel swipeHandler() when break-on-desktop flag and is-desktop flag is true should not call the swipe functions at all" time="0" classname="tucows-donejs-carousel swipeHandler() when break-on-desktop flag and is-desktop flag is true"/>
  <testcase name="tucows-donejs-carousel swipeHandler() when break-on-desktop flag or is-desktop flag is false when action is start should call swipe-start function with the event" time="0" classname="tucows-donejs-carousel swipeHandler() when break-on-desktop flag or is-desktop flag is false when action is start"/>
  <testcase name="tucows-donejs-carousel swipeHandler() when break-on-desktop flag or is-desktop flag is false when action is move should call swipe-move function with the event" time="0" classname="tucows-donejs-carousel swipeHandler() when break-on-desktop flag or is-desktop flag is false when action is move"/>
  <testcase name="tucows-donejs-carousel swipeHandler() when break-on-desktop flag or is-desktop flag is false when action is end should call swipe-end function with the event" time="0" classname="tucows-donejs-carousel swipeHandler() when break-on-desktop flag or is-desktop flag is false when action is end"/>
  <testcase name="tucows-donejs-carousel defineTouchEvent() when touches is not defined should return fingercount of 1 and touches as null" time="0" classname="tucows-donejs-carousel defineTouchEvent() when touches is not defined"/>
  <testcase name="tucows-donejs-carousel defineTouchEvent() when touches is defined should return the calculated finger count and the first touches object" time="0" classname="tucows-donejs-carousel defineTouchEvent() when touches is defined"/>
  <testcase name="tucows-donejs-carousel swipeStart() should set dragging to true" time="0" classname="tucows-donejs-carousel swipeStart()"/>
  <testcase name="tucows-donejs-carousel swipeStart() should call defineTouchEvent with event" time="0.001" classname="tucows-donejs-carousel swipeStart()"/>
  <testcase name="tucows-donejs-carousel swipeStart() when the event has a touches and pagex property when finger count is equal to 1 should assign pageX to startX and currentX to the viewmodel" time="0" classname="tucows-donejs-carousel swipeStart() when the event has a touches and pagex property when finger count is equal to 1"/>
  <testcase name="tucows-donejs-carousel swipeStart() when the event has a touches and pagex property when finger count is greater than 1 should break out of the function, swiping is not allowed" time="0" classname="tucows-donejs-carousel swipeStart() when the event has a touches and pagex property when finger count is greater than 1"/>
  <testcase name="tucows-donejs-carousel swipeStart() when the event does not have a touches and pagex property should assign clientX to startX and currentX to the viewmodel" time="0" classname="tucows-donejs-carousel swipeStart() when the event does not have a touches and pagex property"/>
  <testcase name="tucows-donejs-carousel swipeMove() when dragging is false should stop here and exit the function" time="0.001" classname="tucows-donejs-carousel swipeMove() when dragging is false"/>
  <testcase name="tucows-donejs-carousel swipeMove() when touch and pageX are defined should assign pageX to currentX on view model" time="0.001" classname="tucows-donejs-carousel swipeMove() when touch and pageX are defined"/>
  <testcase name="tucows-donejs-carousel swipeMove() when touch and pageX are defined should assign currentX minus startX to swipeLength on view model" time="0" classname="tucows-donejs-carousel swipeMove() when touch and pageX are defined"/>
  <testcase name="tucows-donejs-carousel swipeMove() when touch and pageX are not defined should assign clientX to currentX on view model" time="0.001" classname="tucows-donejs-carousel swipeMove() when touch and pageX are not defined"/>
  <testcase name="tucows-donejs-carousel swipeMove() when touch and pageX are not defined should assign currentX minus startX to swipeLength on view model" time="0.001" classname="tucows-donejs-carousel swipeMove() when touch and pageX are not defined"/>
  <testcase name="tucows-donejs-carousel swipeMove() when carouselOptions.transition is &quot;dissolve&quot; should call the fadeSlideByAmount function with swipeAmount" time="0.001" classname="tucows-donejs-carousel swipeMove() when carouselOptions.transition is &quot;dissolve&quot;"/>
  <testcase name="tucows-donejs-carousel swipeMove() when carouselOptions.transition is not specified should call getLeft function once with the active slide" time="0.001" classname="tucows-donejs-carousel swipeMove() when carouselOptions.transition is not specified"/>
  <testcase name="tucows-donejs-carousel swipeMove() when carouselOptions.transition is not specified should call the moveCarouselToPosition function with pointerPosition" time="0" classname="tucows-donejs-carousel swipeMove() when carouselOptions.transition is not specified"/>
  <testcase name="tucows-donejs-carousel swipeEnd() should set reset the swipe object" time="0" classname="tucows-donejs-carousel swipeEnd()"/>
  <testcase name="tucows-donejs-carousel swipeEnd() should set dragging flag to false" time="0" classname="tucows-donejs-carousel swipeEnd()"/>
  <testcase name="tucows-donejs-carousel swipeEnd() when dragging is false should stop here and exit the function" time="0" classname="tucows-donejs-carousel swipeEnd() when dragging is false"/>
  <testcase name="tucows-donejs-carousel swipeEnd() when swipe is to the left and greater than 10%, AND it is not the last slide should increment the active slide property and call the changeToActiveSlide function" time="0" classname="tucows-donejs-carousel swipeEnd() when swipe is to the left and greater than 10%, AND it is not the last slide"/>
  <testcase name="tucows-donejs-carousel swipeEnd() when swipe is to the right and is greater than 10%, AND it is not the first slide should reduce the active slide property and call the changeToActiveSlide function" time="0" classname="tucows-donejs-carousel swipeEnd() when swipe is to the right and is greater than 10%, AND it is not the first slide"/>
  <testcase name="tucows-donejs-carousel swipeEnd() when swipe (to right or left) is less than 10% OR its the first/last slide should call changeToActiveSlide on the existing active slide index (goes back to center)" time="0" classname="tucows-donejs-carousel swipeEnd() when swipe (to right or left) is less than 10% OR its the first/last slide"/>
  <testcase name="tucows-donejs-carousel getLeft() should return the left pixel position of the current slide" time="0" classname="tucows-donejs-carousel getLeft()"/>
  <testcase name="tucows-donejs-carousel changeToActiveSlide() when carousel options transition is &quot;dissolve&quot; should call fadeToActiveSlide function" time="0.001" classname="tucows-donejs-carousel changeToActiveSlide() when carousel options transition is &quot;dissolve&quot;"/>
  <testcase name="tucows-donejs-carousel changeToActiveSlide() when carousel options transition is not specified should call moveCarouselToActiveSlide function" time="0" classname="tucows-donejs-carousel changeToActiveSlide() when carousel options transition is not specified"/>
  <testcase name="tucows-donejs-carousel handleBreakOnDesktop() should call changeToActiveSlide once with no parameters" time="0" classname="tucows-donejs-carousel handleBreakOnDesktop()"/>
  <testcase name="tucows-donejs-carousel Demo Page placement should show 8 carousels" time="0" classname="tucows-donejs-carousel Demo Page placement"/>
  <testcase name="tucows-donejs-carousel Functional Tests Slide movement Click on the right arrow active slide should be the second one (index 1)" time="0" classname="tucows-donejs-carousel Functional Tests Slide movement Click on the right arrow active slide"/>
  <testcase name="tucows-donejs-carousel Functional Tests Slide movement Click on the left arrow active slide should stay on first slide" time="0" classname="tucows-donejs-carousel Functional Tests Slide movement Click on the left arrow active slide"/>
  <testcase name="tucows-donejs-carousel Functional Tests Slide movement Press right arrow key active slide should go to second slide" time="0" classname="tucows-donejs-carousel Functional Tests Slide movement Press right arrow key active slide"/>
  <testcase name="tucows-donejs-carousel Functional Tests Slide movement Press right arrow key twice, followed by left arrow once active slide should finish on second slide " time="0" classname="tucows-donejs-carousel Functional Tests Slide movement Press right arrow key twice, followed by left arrow once active slide"/>
  <testcase name="tucows-donejs-carousel Functional Tests Transition Length active slide after 200ms should be the second slide" time="0.2" classname="tucows-donejs-carousel Functional Tests Transition Length active slide after 200ms"/>
  <system-out>
    <![CDATA[
]]>
  </system-out>
  <system-err/>
</testsuite>